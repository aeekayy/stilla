/*
 * Buffet Config Manager
 *
 * A configuration service that stores and retrieves configuration.
 *
 * API version: 0.1.0
 * Contact: apiteam@swagger.io
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package models

import (
	"errors"
	"time"

	"go.mongodb.org/mongo-driver/bson"
	"go.mongodb.org/mongo-driver/bson/primitive"
)

// ConfigResponse ...
type ConfigResponse struct {
	Created    time.Time           `json:"created",bson:"created"`
	Modified   time.Time           `json:"modified",bson:"modified"`
	ID         *primitive.ObjectID `json:"ID" bson:"_id,omitempty"`
	Config     ConfigVersion       `json:"config,omitempty" bson:"config"`
	ConfigName string              `json:"config_name" bson:"config_name"`
	CreatedBy  string              `json:"created_by" bson:"created_by"`
	ConfigID   string              `json:"config_id" bson:"config_id"`
	Host       string              `json:"host" bson:"host"`
	Parents    []string            `json:"parents,omitempty" bson:"parents,omitempty"`
	Tags       []string            `form:"tags" json:"tags" yaml:"tags" bson:"tags"`
	Version    int32               `json:"version" bson:"version"`
}

// Ingest ingest data from a BSON map
func (cr *ConfigResponse) Ingest(b bson.M) error {
	if b == nil {
		return errors.New("can't ingest nil map")
	}

	m, err := bson.Marshal(b)

	if err != nil {
		return err
	}

	err = bson.Unmarshal(m, cr)

	return err
}
